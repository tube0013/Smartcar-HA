# serializer version: 1
# name: test_limited_scopes[enabled_entities0-enabled_scopes0-vw_id_4][device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'smartcar',
        'VIWP1AB29P15LA85784N',
      ),
    }),
    'labels': set({
    }),
    'manufacturer': 'VW',
    'model': 'ID.4 (2021)',
    'model_id': None,
    'name': 'VW ID.4',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_limited_scopes[enabled_entities0-enabled_scopes0-vw_id_4][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery_capacity',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.ENERGY_STORAGE: 'energy_storage'>,
      'original_icon': None,
      'original_name': 'Battery Capacity',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_capacity',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
      'original_icon': None,
      'original_name': 'Battery',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_level',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
  ])
# ---
# name: test_limited_scopes[enabled_entities0-enabled_scopes0-vw_id_4][sensor.vw_id_4_battery]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'device_class': 'battery',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '68',
  })
# ---
# name: test_limited_scopes[enabled_entities0-enabled_scopes0-vw_id_4][sensor.vw_id_4_battery_capacity]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T17:27:25.114000+00:00',
      'device_class': 'energy_storage',
      'fetched_at': '2025-05-09T17:27:25.114000+00:00',
      'friendly_name': 'VW ID.4 Battery Capacity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery_capacity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '82',
  })
# ---
# name: test_limited_scopes[enabled_entities0-enabled_scopes0-vw_id_4][sensor.vw_id_4_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'device_class': 'distance',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '275',
  })
# ---
# name: test_migration[multiple_vehicles_in_config_entry][config_entry_data]
  dict({
    'auth_implementation': 'smartcar',
    'token': dict({
      'access_token': 'mock-access-token',
      'scopes': list([
        'read_vehicle_info',
        'read_vin',
        'read_battery',
      ]),
    }),
    'vehicles': dict({
      'mock_vehicle_id_1': dict({
        'make': 'Make for mock_vehicle_id_1',
        'model': 'Model for mock_vehicle_id_1',
        'vin': 'mock-vin-for-$mock_vehicle_id_1',
        'year': 'Year for mock_vehicle_id_1',
      }),
      'mock_vehicle_id_2': dict({
        'make': 'Make for mock_vehicle_id_2',
        'model': 'Model for mock_vehicle_id_2',
        'vin': 'mock-vin-for-$mock_vehicle_id_2',
        'year': 'Year for mock_vehicle_id_2',
      }),
    }),
  })
# ---
# name: test_migration[multiple_vehicles_in_config_entry_and_api_returns_new_vehicles][config_entry_data]
  dict({
    'auth_implementation': 'smartcar',
    'token': dict({
      'access_token': 'mock-access-token',
      'scopes': list([
        'read_vehicle_info',
        'read_vin',
        'read_battery',
      ]),
    }),
    'vehicles': dict({
      'mock_vehicle_id_1': dict({
        'make': 'Make for mock_vehicle_id_1',
        'model': 'Model for mock_vehicle_id_1',
        'vin': 'mock-vin-for-$mock_vehicle_id_1',
        'year': 'Year for mock_vehicle_id_1',
      }),
      'mock_vehicle_id_2': dict({
        'make': 'Make for mock_vehicle_id_2',
        'model': 'Model for mock_vehicle_id_2',
        'vin': 'mock-vin-for-$mock_vehicle_id_2',
        'year': 'Year for mock_vehicle_id_2',
      }),
    }),
  })
# ---
# name: test_migration[single_vehicle_in_config_entry][config_entry_data]
  dict({
    'auth_implementation': 'smartcar',
    'token': dict({
      'access_token': 'mock-access-token',
      'scopes': list([
        'read_vehicle_info',
        'read_vin',
        'read_battery',
      ]),
    }),
    'vehicles': dict({
      'mock_vehicle_id_1': dict({
        'make': 'Make for mock_vehicle_id_1',
        'model': 'Model for mock_vehicle_id_1',
        'vin': 'mock-vin-for-$mock_vehicle_id_1',
        'year': 'Year for mock_vehicle_id_1',
      }),
    }),
  })
# ---
# name: test_migration[single_vehicle_not_in_config_entry][config_entry_data]
  dict({
    'auth_implementation': 'smartcar',
    'token': dict({
      'access_token': 'mock-access-token',
      'scopes': list([
        'read_vehicle_info',
        'read_vin',
        'read_battery',
      ]),
    }),
    'vehicles': dict({
      'mock_vehicle_id_1': dict({
        'make': 'Make for mock_vehicle_id_1',
        'model': 'Model for mock_vehicle_id_1',
        'vin': 'mock-vin-for-$mock_vehicle_id_1',
        'year': 'Year for mock_vehicle_id_1',
      }),
    }),
  })
# ---
# name: test_standard_setup[unknown_make][binary_sensor.smartcar_784n_charging_cable_plugged_in]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'plug',
      'friendly_name': 'Smartcar 784N Charging Cable Plugged In',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.smartcar_784n_charging_cable_plugged_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_standard_setup[unknown_make][device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'smartcar',
        'VIWP1AB29P15LA85784N',
      ),
    }),
    'labels': set({
    }),
    'manufacturer': None,
    'model': None,
    'model_id': None,
    'name': 'Smartcar 784N',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_standard_setup[unknown_make][device_tracker.smartcar_784n_location]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2019-10-24T00:43:46+00:00',
      'friendly_name': 'Smartcar 784N Location',
      'gps_accuracy': 0,
      'icon': 'mdi:car',
      'latitude': 37.4292,
      'longitude': 122.1381,
      'source_type': <SourceType.GPS: 'gps'>,
    }),
    'context': <ANY>,
    'entity_id': 'device_tracker.smartcar_784n_location',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_home',
  })
# ---
# name: test_standard_setup[unknown_make][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_battery',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
      'original_icon': None,
      'original_name': 'Battery',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_level',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_charging_status',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-station',
      'original_name': 'Charging Status',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging_state',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'switch',
      'entity_category': None,
      'entity_id': 'switch.smartcar_784n_charging',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-plug-type2',
      'original_name': 'Charging',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'lock',
      'entity_category': None,
      'entity_id': 'lock.smartcar_784n_door_lock',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Door Lock',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_door_lock',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'binary_sensor',
      'entity_category': None,
      'entity_id': 'binary_sensor.smartcar_784n_charging_cable_plugged_in',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <BinarySensorDeviceClass.PLUG: 'plug'>,
      'original_icon': None,
      'original_name': 'Charging Cable Plugged In',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_plug_status',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'device_tracker',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'device_tracker.smartcar_784n_location',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:car',
      'original_name': 'Location',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_location',
      'unit_of_measurement': None,
    }),
  ])
# ---
# name: test_standard_setup[unknown_make][lock.smartcar_784n_door_lock]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Door Lock',
      'supported_features': <LockEntityFeature: 0>,
    }),
    'context': <ANY>,
    'entity_id': 'lock.smartcar_784n_door_lock',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unlocked',
  })
# ---
# name: test_standard_setup[unknown_make][sensor.smartcar_784n_battery]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Smartcar 784N Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '30',
  })
# ---
# name: test_standard_setup[unknown_make][sensor.smartcar_784n_charging_status]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Charging Status',
      'icon': 'mdi:ev-station',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_charging_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FULLY_CHARGED',
  })
# ---
# name: test_standard_setup[unknown_make][sensor.smartcar_784n_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'Smartcar 784N Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '40.5',
  })
# ---
# name: test_standard_setup[unknown_make][switch.smartcar_784n_charging]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Charging',
      'icon': 'mdi:ev-plug-type2',
    }),
    'context': <ANY>,
    'entity_id': 'switch.smartcar_784n_charging',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_standard_setup[vw_id_4][binary_sensor.vw_id_4_charging_cable_plugged_in]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'device_class': 'plug',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Charging Cable Plugged In',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_standard_setup[vw_id_4][device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'smartcar',
        'VIWP1AB29P15LA85784N',
      ),
    }),
    'labels': set({
    }),
    'manufacturer': 'VW',
    'model': 'ID.4 (2021)',
    'model_id': None,
    'name': 'VW ID.4',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_standard_setup[vw_id_4][device_tracker.vw_id_4_location]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:52+00:00',
      'fetched_at': '2025-05-09T17:27:25.401000+00:00',
      'friendly_name': 'VW ID.4 Location',
      'gps_accuracy': 0,
      'icon': 'mdi:car',
      'latitude': 37.4292,
      'longitude': 122.1381,
      'source_type': <SourceType.GPS: 'gps'>,
    }),
    'context': <ANY>,
    'entity_id': 'device_tracker.vw_id_4_location',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_home',
  })
# ---
# name: test_standard_setup[vw_id_4][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
      'original_icon': None,
      'original_name': 'Battery',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_level',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_charging_status',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-station',
      'original_name': 'Charging Status',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging_state',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'switch',
      'entity_category': None,
      'entity_id': 'switch.vw_id_4_charging',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-plug-type2',
      'original_name': 'Charging',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'lock',
      'entity_category': None,
      'entity_id': 'lock.vw_id_4_door_lock',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Door Lock',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_door_lock',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'binary_sensor',
      'entity_category': None,
      'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <BinarySensorDeviceClass.PLUG: 'plug'>,
      'original_icon': None,
      'original_name': 'Charging Cable Plugged In',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_plug_status',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'device_tracker',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'device_tracker.vw_id_4_location',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:car',
      'original_name': 'Location',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_location',
      'unit_of_measurement': None,
    }),
  ])
# ---
# name: test_standard_setup[vw_id_4][lock.vw_id_4_door_lock]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Door Lock',
      'supported_features': <LockEntityFeature: 0>,
    }),
    'context': <ANY>,
    'entity_id': 'lock.vw_id_4_door_lock',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup[vw_id_4][sensor.vw_id_4_battery]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'device_class': 'battery',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '68',
  })
# ---
# name: test_standard_setup[vw_id_4][sensor.vw_id_4_charging_status]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Charging Status',
      'icon': 'mdi:ev-station',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_charging_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'NOT_CHARGING',
  })
# ---
# name: test_standard_setup[vw_id_4][sensor.vw_id_4_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'device_class': 'distance',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '275',
  })
# ---
# name: test_standard_setup[vw_id_4][switch.vw_id_4_charging]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Charging',
      'icon': 'mdi:ev-plug-type2',
    }),
    'context': <ANY>,
    'entity_id': 'switch.vw_id_4_charging',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][binary_sensor.smartcar_784n_charging_cable_plugged_in]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'plug',
      'friendly_name': 'Smartcar 784N Charging Cable Plugged In',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.smartcar_784n_charging_cable_plugged_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'smartcar',
        'VIWP1AB29P15LA85784N',
      ),
    }),
    'labels': set({
    }),
    'manufacturer': None,
    'model': None,
    'model_id': None,
    'name': 'Smartcar 784N',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][device_tracker.smartcar_784n_location]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2019-10-24T00:43:46+00:00',
      'friendly_name': 'Smartcar 784N Location',
      'gps_accuracy': 0,
      'icon': 'mdi:car',
      'latitude': 37.4292,
      'longitude': 122.1381,
      'source_type': <SourceType.GPS: 'gps'>,
    }),
    'context': <ANY>,
    'entity_id': 'device_tracker.smartcar_784n_location',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_home',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_battery_capacity',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.ENERGY_STORAGE: 'energy_storage'>,
      'original_icon': None,
      'original_name': 'Battery Capacity',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_capacity',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_battery',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
      'original_icon': None,
      'original_name': 'Battery',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_level',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_charging_status',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-station',
      'original_name': 'Charging Status',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging_state',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_engine_oil_life',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:oil-level',
      'original_name': 'Engine Oil Life',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_engine_oil',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_fuel',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel',
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_odometer',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': None,
      'original_name': 'Odometer',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_odometer',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_tire_pressure_back_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_tire_pressure_back_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_tire_pressure_front_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_tire_pressure_front_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'switch',
      'entity_category': None,
      'entity_id': 'switch.smartcar_784n_charging',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-plug-type2',
      'original_name': 'Charging',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'lock',
      'entity_category': None,
      'entity_id': 'lock.smartcar_784n_door_lock',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Door Lock',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_door_lock',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'binary_sensor',
      'entity_category': None,
      'entity_id': 'binary_sensor.smartcar_784n_charging_cable_plugged_in',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <BinarySensorDeviceClass.PLUG: 'plug'>,
      'original_icon': None,
      'original_name': 'Charging Cable Plugged In',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_plug_status',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'max': 100.0,
        'min': 50.0,
        'mode': <NumberMode.BOX: 'box'>,
        'step': 1.0,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'number',
      'entity_category': None,
      'entity_id': 'number.smartcar_784n_charge_limit',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:battery-charging-80',
      'original_name': 'Charge Limit',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charge_limit',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'device_tracker',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'device_tracker.smartcar_784n_location',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:car',
      'original_name': 'Location',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_location',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_fuel_percent',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel Percent',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_percent',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.smartcar_784n_fuel_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Fuel Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
  ])
# ---
# name: test_standard_setup_with_all_entities[unknown_make][lock.smartcar_784n_door_lock]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Door Lock',
      'supported_features': <LockEntityFeature: 0>,
    }),
    'context': <ANY>,
    'entity_id': 'lock.smartcar_784n_door_lock',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unlocked',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][number.smartcar_784n_charge_limit]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Charge Limit',
      'icon': 'mdi:battery-charging-80',
      'max': 100.0,
      'min': 50.0,
      'mode': <NumberMode.BOX: 'box'>,
      'step': 1.0,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'number.smartcar_784n_charge_limit',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '80',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_battery]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'Smartcar 784N Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '30',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_battery_capacity]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy_storage',
      'friendly_name': 'Smartcar 784N Battery Capacity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_battery_capacity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '70.9',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_charging_status]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Charging Status',
      'icon': 'mdi:ev-station',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_charging_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FULLY_CHARGED',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_engine_oil_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Engine Oil Life',
      'icon': 'mdi:oil-level',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_engine_oil_life',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.35',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_fuel]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Fuel',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_fuel',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '53.2',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_fuel_percent]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Fuel Percent',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_fuel_percent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_fuel_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'Smartcar 784N Fuel Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_fuel_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_odometer]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2019-10-24T00:43:46+00:00',
      'device_class': 'distance',
      'friendly_name': 'Smartcar 784N Odometer',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_odometer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '37829',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'Smartcar 784N Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '40.5',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_tire_pressure_back_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2019-10-24T00:43:46+00:00',
      'device_class': 'pressure',
      'friendly_name': 'Smartcar 784N Tire Pressure Back Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_tire_pressure_back_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '219.3',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_tire_pressure_back_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2019-10-24T00:43:46+00:00',
      'device_class': 'pressure',
      'friendly_name': 'Smartcar 784N Tire Pressure Back Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_tire_pressure_back_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '219.3',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_tire_pressure_front_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2019-10-24T00:43:46+00:00',
      'device_class': 'pressure',
      'friendly_name': 'Smartcar 784N Tire Pressure Front Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_tire_pressure_front_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '219.3',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][sensor.smartcar_784n_tire_pressure_front_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2019-10-24T00:43:46+00:00',
      'device_class': 'pressure',
      'friendly_name': 'Smartcar 784N Tire Pressure Front Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.smartcar_784n_tire_pressure_front_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '219.3',
  })
# ---
# name: test_standard_setup_with_all_entities[unknown_make][switch.smartcar_784n_charging]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Smartcar 784N Charging',
      'icon': 'mdi:ev-plug-type2',
    }),
    'context': <ANY>,
    'entity_id': 'switch.smartcar_784n_charging',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][binary_sensor.vw_id_4_charging_cable_plugged_in]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'device_class': 'plug',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Charging Cable Plugged In',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'smartcar',
        'VIWP1AB29P15LA85784N',
      ),
    }),
    'labels': set({
    }),
    'manufacturer': 'VW',
    'model': 'ID.4 (2021)',
    'model_id': None,
    'name': 'VW ID.4',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][device_tracker.vw_id_4_location]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:52+00:00',
      'fetched_at': '2025-05-09T17:27:25.401000+00:00',
      'friendly_name': 'VW ID.4 Location',
      'gps_accuracy': 0,
      'icon': 'mdi:car',
      'latitude': 37.4292,
      'longitude': 122.1381,
      'source_type': <SourceType.GPS: 'gps'>,
    }),
    'context': <ANY>,
    'entity_id': 'device_tracker.vw_id_4_location',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'not_home',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery_capacity',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.ENERGY_STORAGE: 'energy_storage'>,
      'original_icon': None,
      'original_name': 'Battery Capacity',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_capacity',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
      'original_icon': None,
      'original_name': 'Battery',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_level',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_charging_status',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-station',
      'original_name': 'Charging Status',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging_state',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_engine_oil_life',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:oil-level',
      'original_name': 'Engine Oil Life',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_engine_oil',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel',
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_odometer',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': None,
      'original_name': 'Odometer',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_odometer',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'switch',
      'entity_category': None,
      'entity_id': 'switch.vw_id_4_charging',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-plug-type2',
      'original_name': 'Charging',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'lock',
      'entity_category': None,
      'entity_id': 'lock.vw_id_4_door_lock',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Door Lock',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_door_lock',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'binary_sensor',
      'entity_category': None,
      'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <BinarySensorDeviceClass.PLUG: 'plug'>,
      'original_icon': None,
      'original_name': 'Charging Cable Plugged In',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_plug_status',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'max': 100.0,
        'min': 50.0,
        'mode': <NumberMode.BOX: 'box'>,
        'step': 1.0,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'number',
      'entity_category': None,
      'entity_id': 'number.vw_id_4_charge_limit',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:battery-charging-80',
      'original_name': 'Charge Limit',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charge_limit',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'device_tracker',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'device_tracker.vw_id_4_location',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:car',
      'original_name': 'Location',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_location',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_percent',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel Percent',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_percent',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Fuel Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
  ])
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][lock.vw_id_4_door_lock]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Door Lock',
      'supported_features': <LockEntityFeature: 0>,
    }),
    'context': <ANY>,
    'entity_id': 'lock.vw_id_4_door_lock',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][number.vw_id_4_charge_limit]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:55+00:00',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Charge Limit',
      'icon': 'mdi:battery-charging-80',
      'max': 100.0,
      'min': 50.0,
      'mode': <NumberMode.BOX: 'box'>,
      'step': 1.0,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'number.vw_id_4_charge_limit',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_battery]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'device_class': 'battery',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '68',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_battery_capacity]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T17:27:25.114000+00:00',
      'device_class': 'energy_storage',
      'fetched_at': '2025-05-09T17:27:25.114000+00:00',
      'friendly_name': 'VW ID.4 Battery Capacity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery_capacity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '82',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_charging_status]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Charging Status',
      'icon': 'mdi:ev-station',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_charging_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'NOT_CHARGING',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_engine_oil_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Engine Oil Life',
      'icon': 'mdi:oil-level',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_engine_oil_life',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_fuel]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_fuel_percent]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel Percent',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_percent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_fuel_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Fuel Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_odometer]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:52+00:00',
      'device_class': 'distance',
      'fetched_at': '2025-05-09T17:27:25.401000+00:00',
      'friendly_name': 'VW ID.4 Odometer',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_odometer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21919',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'device_class': 'distance',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '275',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_tire_pressure_back_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_tire_pressure_back_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_tire_pressure_front_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][sensor.vw_id_4_tire_pressure_front_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_standard_setup_with_all_entities[vw_id_4][switch.vw_id_4_charging]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'age': '2025-05-09T15:40:57+00:00',
      'fetched_at': '2025-05-09T17:27:26.712000+00:00',
      'friendly_name': 'VW ID.4 Charging',
      'icon': 'mdi:ev-plug-type2',
    }),
    'context': <ANY>,
    'entity_id': 'switch.vw_id_4_charging',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][binary_sensor.vw_id_4_charging_cable_plugged_in]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'plug',
      'friendly_name': 'VW ID.4 Charging Cable Plugged In',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'smartcar',
        'VIWP1AB29P15LA85784N',
      ),
    }),
    'labels': set({
    }),
    'manufacturer': 'VW',
    'model': 'ID.4 (2021)',
    'model_id': None,
    'name': 'VW ID.4',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_update_errors[network_error-vw_id_4][device_tracker.vw_id_4_location]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Location',
      'icon': 'mdi:car',
    }),
    'context': <ANY>,
    'entity_id': 'device_tracker.vw_id_4_location',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery_capacity',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.ENERGY_STORAGE: 'energy_storage'>,
      'original_icon': None,
      'original_name': 'Battery Capacity',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_capacity',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
      'original_icon': None,
      'original_name': 'Battery',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_level',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_charging_status',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-station',
      'original_name': 'Charging Status',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging_state',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_engine_oil_life',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:oil-level',
      'original_name': 'Engine Oil Life',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_engine_oil',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel',
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_odometer',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': None,
      'original_name': 'Odometer',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_odometer',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'switch',
      'entity_category': None,
      'entity_id': 'switch.vw_id_4_charging',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-plug-type2',
      'original_name': 'Charging',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'lock',
      'entity_category': None,
      'entity_id': 'lock.vw_id_4_door_lock',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Door Lock',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_door_lock',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'binary_sensor',
      'entity_category': None,
      'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <BinarySensorDeviceClass.PLUG: 'plug'>,
      'original_icon': None,
      'original_name': 'Charging Cable Plugged In',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_plug_status',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'max': 100.0,
        'min': 50.0,
        'mode': <NumberMode.BOX: 'box'>,
        'step': 1.0,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'number',
      'entity_category': None,
      'entity_id': 'number.vw_id_4_charge_limit',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:battery-charging-80',
      'original_name': 'Charge Limit',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charge_limit',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'device_tracker',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'device_tracker.vw_id_4_location',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:car',
      'original_name': 'Location',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_location',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_percent',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel Percent',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_percent',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Fuel Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
  ])
# ---
# name: test_update_errors[network_error-vw_id_4][lock.vw_id_4_door_lock]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Door Lock',
      'supported_features': <LockEntityFeature: 0>,
    }),
    'context': <ANY>,
    'entity_id': 'lock.vw_id_4_door_lock',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][number.vw_id_4_charge_limit]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charge Limit',
      'icon': 'mdi:battery-charging-80',
      'max': 100.0,
      'min': 50.0,
      'mode': <NumberMode.BOX: 'box'>,
      'step': 1.0,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'number.vw_id_4_charge_limit',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_battery]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'VW ID.4 Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_battery_capacity]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy_storage',
      'friendly_name': 'VW ID.4 Battery Capacity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery_capacity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_charging_status]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charging Status',
      'icon': 'mdi:ev-station',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_charging_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_engine_oil_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Engine Oil Life',
      'icon': 'mdi:oil-level',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_engine_oil_life',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_fuel]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_fuel_percent]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel Percent',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_percent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_fuel_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Fuel Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_odometer]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Odometer',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_odometer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_tire_pressure_back_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_tire_pressure_back_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_tire_pressure_front_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][sensor.vw_id_4_tire_pressure_front_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_error-vw_id_4][switch.vw_id_4_charging]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charging',
      'icon': 'mdi:ev-plug-type2',
    }),
    'context': <ANY>,
    'entity_id': 'switch.vw_id_4_charging',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][binary_sensor.vw_id_4_charging_cable_plugged_in]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'plug',
      'friendly_name': 'VW ID.4 Charging Cable Plugged In',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'smartcar',
        'VIWP1AB29P15LA85784N',
      ),
    }),
    'labels': set({
    }),
    'manufacturer': 'VW',
    'model': 'ID.4 (2021)',
    'model_id': None,
    'name': 'VW ID.4',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][device_tracker.vw_id_4_location]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Location',
      'icon': 'mdi:car',
    }),
    'context': <ANY>,
    'entity_id': 'device_tracker.vw_id_4_location',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery_capacity',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.ENERGY_STORAGE: 'energy_storage'>,
      'original_icon': None,
      'original_name': 'Battery Capacity',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_capacity',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
      'original_icon': None,
      'original_name': 'Battery',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_level',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_charging_status',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-station',
      'original_name': 'Charging Status',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging_state',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_engine_oil_life',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:oil-level',
      'original_name': 'Engine Oil Life',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_engine_oil',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel',
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_odometer',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': None,
      'original_name': 'Odometer',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_odometer',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'switch',
      'entity_category': None,
      'entity_id': 'switch.vw_id_4_charging',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-plug-type2',
      'original_name': 'Charging',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'lock',
      'entity_category': None,
      'entity_id': 'lock.vw_id_4_door_lock',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Door Lock',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_door_lock',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'binary_sensor',
      'entity_category': None,
      'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <BinarySensorDeviceClass.PLUG: 'plug'>,
      'original_icon': None,
      'original_name': 'Charging Cable Plugged In',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_plug_status',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'max': 100.0,
        'min': 50.0,
        'mode': <NumberMode.BOX: 'box'>,
        'step': 1.0,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'number',
      'entity_category': None,
      'entity_id': 'number.vw_id_4_charge_limit',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:battery-charging-80',
      'original_name': 'Charge Limit',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charge_limit',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'device_tracker',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'device_tracker.vw_id_4_location',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:car',
      'original_name': 'Location',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_location',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_percent',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel Percent',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_percent',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Fuel Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
  ])
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][lock.vw_id_4_door_lock]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Door Lock',
      'supported_features': <LockEntityFeature: 0>,
    }),
    'context': <ANY>,
    'entity_id': 'lock.vw_id_4_door_lock',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][number.vw_id_4_charge_limit]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charge Limit',
      'icon': 'mdi:battery-charging-80',
      'max': 100.0,
      'min': 50.0,
      'mode': <NumberMode.BOX: 'box'>,
      'step': 1.0,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'number.vw_id_4_charge_limit',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_battery]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'VW ID.4 Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_battery_capacity]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy_storage',
      'friendly_name': 'VW ID.4 Battery Capacity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery_capacity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_charging_status]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charging Status',
      'icon': 'mdi:ev-station',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_charging_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_engine_oil_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Engine Oil Life',
      'icon': 'mdi:oil-level',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_engine_oil_life',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_fuel]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_fuel_percent]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel Percent',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_percent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_fuel_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Fuel Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_odometer]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Odometer',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_odometer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_tire_pressure_back_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_tire_pressure_back_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_tire_pressure_front_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][sensor.vw_id_4_tire_pressure_front_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[network_proxy_response-vw_id_4][switch.vw_id_4_charging]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charging',
      'icon': 'mdi:ev-plug-type2',
    }),
    'context': <ANY>,
    'entity_id': 'switch.vw_id_4_charging',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][binary_sensor.vw_id_4_charging_cable_plugged_in]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'plug',
      'friendly_name': 'VW ID.4 Charging Cable Plugged In',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'smartcar',
        'VIWP1AB29P15LA85784N',
      ),
    }),
    'labels': set({
    }),
    'manufacturer': 'VW',
    'model': 'ID.4 (2021)',
    'model_id': None,
    'name': 'VW ID.4',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_update_errors[server_error-vw_id_4][device_tracker.vw_id_4_location]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Location',
      'icon': 'mdi:car',
    }),
    'context': <ANY>,
    'entity_id': 'device_tracker.vw_id_4_location',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery_capacity',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.ENERGY_STORAGE: 'energy_storage'>,
      'original_icon': None,
      'original_name': 'Battery Capacity',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_capacity',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
      'original_icon': None,
      'original_name': 'Battery',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_level',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_charging_status',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-station',
      'original_name': 'Charging Status',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging_state',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_engine_oil_life',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:oil-level',
      'original_name': 'Engine Oil Life',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_engine_oil',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel',
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_odometer',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': None,
      'original_name': 'Odometer',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_odometer',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'switch',
      'entity_category': None,
      'entity_id': 'switch.vw_id_4_charging',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-plug-type2',
      'original_name': 'Charging',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'lock',
      'entity_category': None,
      'entity_id': 'lock.vw_id_4_door_lock',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Door Lock',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_door_lock',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'binary_sensor',
      'entity_category': None,
      'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <BinarySensorDeviceClass.PLUG: 'plug'>,
      'original_icon': None,
      'original_name': 'Charging Cable Plugged In',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_plug_status',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'max': 100.0,
        'min': 50.0,
        'mode': <NumberMode.BOX: 'box'>,
        'step': 1.0,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'number',
      'entity_category': None,
      'entity_id': 'number.vw_id_4_charge_limit',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:battery-charging-80',
      'original_name': 'Charge Limit',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charge_limit',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'device_tracker',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'device_tracker.vw_id_4_location',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:car',
      'original_name': 'Location',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_location',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_percent',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel Percent',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_percent',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Fuel Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
  ])
# ---
# name: test_update_errors[server_error-vw_id_4][lock.vw_id_4_door_lock]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Door Lock',
      'supported_features': <LockEntityFeature: 0>,
    }),
    'context': <ANY>,
    'entity_id': 'lock.vw_id_4_door_lock',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][number.vw_id_4_charge_limit]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charge Limit',
      'icon': 'mdi:battery-charging-80',
      'max': 100.0,
      'min': 50.0,
      'mode': <NumberMode.BOX: 'box'>,
      'step': 1.0,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'number.vw_id_4_charge_limit',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_battery]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'VW ID.4 Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_battery_capacity]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy_storage',
      'friendly_name': 'VW ID.4 Battery Capacity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery_capacity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_charging_status]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charging Status',
      'icon': 'mdi:ev-station',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_charging_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_engine_oil_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Engine Oil Life',
      'icon': 'mdi:oil-level',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_engine_oil_life',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_fuel]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_fuel_percent]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel Percent',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_percent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_fuel_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Fuel Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_odometer]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Odometer',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_odometer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_tire_pressure_back_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_tire_pressure_back_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_tire_pressure_front_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][sensor.vw_id_4_tire_pressure_front_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[server_error-vw_id_4][switch.vw_id_4_charging]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charging',
      'icon': 'mdi:ev-plug-type2',
    }),
    'context': <ANY>,
    'entity_id': 'switch.vw_id_4_charging',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][binary_sensor.vw_id_4_charging_cable_plugged_in]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'plug',
      'friendly_name': 'VW ID.4 Charging Cable Plugged In',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'smartcar',
        'VIWP1AB29P15LA85784N',
      ),
    }),
    'labels': set({
    }),
    'manufacturer': 'VW',
    'model': 'ID.4 (2021)',
    'model_id': None,
    'name': 'VW ID.4',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][device_tracker.vw_id_4_location]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Location',
      'icon': 'mdi:car',
    }),
    'context': <ANY>,
    'entity_id': 'device_tracker.vw_id_4_location',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery_capacity',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.ENERGY_STORAGE: 'energy_storage'>,
      'original_icon': None,
      'original_name': 'Battery Capacity',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_capacity',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_battery',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
      'original_icon': None,
      'original_name': 'Battery',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_battery_level',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_charging_status',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-station',
      'original_name': 'Charging Status',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging_state',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_engine_oil_life',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:oil-level',
      'original_name': 'Engine Oil Life',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_engine_oil',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel',
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_odometer',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': None,
      'original_name': 'Odometer',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_odometer',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Back Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_back_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Left',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_left',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 1,
        }),
      }),
      'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
      'original_icon': None,
      'original_name': 'Tire Pressure Front Right',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_tire_pressure_front_right',
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'switch',
      'entity_category': None,
      'entity_id': 'switch.vw_id_4_charging',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:ev-plug-type2',
      'original_name': 'Charging',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charging',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'lock',
      'entity_category': None,
      'entity_id': 'lock.vw_id_4_door_lock',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Door Lock',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_door_lock',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'binary_sensor',
      'entity_category': None,
      'entity_id': 'binary_sensor.vw_id_4_charging_cable_plugged_in',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': <BinarySensorDeviceClass.PLUG: 'plug'>,
      'original_icon': None,
      'original_name': 'Charging Cable Plugged In',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_plug_status',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'max': 100.0,
        'min': 50.0,
        'mode': <NumberMode.BOX: 'box'>,
        'step': 1.0,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'number',
      'entity_category': None,
      'entity_id': 'number.vw_id_4_charge_limit',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:battery-charging-80',
      'original_name': 'Charge Limit',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_charge_limit',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'device_tracker',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'device_tracker.vw_id_4_location',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:car',
      'original_name': 'Location',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_location',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_percent',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': 'mdi:gas-station',
      'original_name': 'Fuel Percent',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_percent',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'config_subentry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.vw_id_4_fuel_range',
      'has_entity_name': True,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'labels': set({
      }),
      'name': None,
      'options': dict({
        'sensor': dict({
          'suggested_display_precision': 2,
        }),
      }),
      'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
      'original_icon': 'mdi:map-marker-distance',
      'original_name': 'Fuel Range',
      'platform': 'smartcar',
      'previous_unique_id': None,
      'suggested_object_id': None,
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'VIWP1AB29P15LA85784N_fuel_range',
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
  ])
# ---
# name: test_update_errors[unauthorized-vw_id_4][lock.vw_id_4_door_lock]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Door Lock',
      'supported_features': <LockEntityFeature: 0>,
    }),
    'context': <ANY>,
    'entity_id': 'lock.vw_id_4_door_lock',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][number.vw_id_4_charge_limit]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charge Limit',
      'icon': 'mdi:battery-charging-80',
      'max': 100.0,
      'min': 50.0,
      'mode': <NumberMode.BOX: 'box'>,
      'step': 1.0,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'number.vw_id_4_charge_limit',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_battery]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'VW ID.4 Battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_battery_capacity]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy_storage',
      'friendly_name': 'VW ID.4 Battery Capacity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_battery_capacity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_charging_status]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charging Status',
      'icon': 'mdi:ev-station',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_charging_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_engine_oil_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Engine Oil Life',
      'icon': 'mdi:oil-level',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_engine_oil_life',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_fuel]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolume.LITERS: 'L'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_fuel_percent]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Fuel Percent',
      'icon': 'mdi:gas-station',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_percent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_fuel_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Fuel Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_fuel_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_odometer]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Odometer',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_odometer',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_range]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'distance',
      'friendly_name': 'VW ID.4 Range',
      'icon': 'mdi:map-marker-distance',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_range',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_tire_pressure_back_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_tire_pressure_back_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Back Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_back_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_tire_pressure_front_left]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Left',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_left',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][sensor.vw_id_4_tire_pressure_front_right]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'VW ID.4 Tire Pressure Front Right',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.KPA: 'kPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vw_id_4_tire_pressure_front_right',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_update_errors[unauthorized-vw_id_4][switch.vw_id_4_charging]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'VW ID.4 Charging',
      'icon': 'mdi:ev-plug-type2',
    }),
    'context': <ANY>,
    'entity_id': 'switch.vw_id_4_charging',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
